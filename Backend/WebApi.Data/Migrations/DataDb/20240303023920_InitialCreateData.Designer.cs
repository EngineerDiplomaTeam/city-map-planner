// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.Data;

#nullable disable

namespace WebApi.Data.Migrations.DataDb
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20240303023920_InitialCreateData")]
    partial class InitialCreateData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("data")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OsmTagOsmWay", b =>
                {
                    b.Property<long>("WaysId")
                        .HasColumnType("bigint")
                        .HasColumnName("ways_id");

                    b.Property<string>("TagsName")
                        .HasColumnType("text")
                        .HasColumnName("tags_name");

                    b.Property<string>("TagsValue")
                        .HasColumnType("text")
                        .HasColumnName("tags_value");

                    b.HasKey("WaysId", "TagsName", "TagsValue")
                        .HasName("pk_osm_tag_osm_way");

                    b.HasIndex("TagsName", "TagsValue")
                        .HasDatabaseName("ix_osm_tag_osm_way_tags_name_tags_value");

                    b.ToTable("osm_tag_osm_way", "data");
                });

            modelBuilder.Entity("WebApi.Data.Model.OsmEdge", b =>
                {
                    b.Property<long>("FromId")
                        .HasColumnType("bigint")
                        .HasColumnName("from_id");

                    b.Property<long>("ToId")
                        .HasColumnType("bigint")
                        .HasColumnName("to_id");

                    b.Property<long>("WayId")
                        .HasColumnType("bigint")
                        .HasColumnName("way_id");

                    b.HasKey("FromId", "ToId")
                        .HasName("pk_edges");

                    b.HasIndex("ToId")
                        .HasDatabaseName("ix_edges_to_id");

                    b.HasIndex("WayId")
                        .HasDatabaseName("ix_edges_way_id");

                    b.ToTable("edges", "data");
                });

            modelBuilder.Entity("WebApi.Data.Model.OsmNode", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<double>("Lat")
                        .HasColumnType("double precision")
                        .HasColumnName("lat");

                    b.Property<double>("Lon")
                        .HasColumnType("double precision")
                        .HasColumnName("lon");

                    b.HasKey("Id")
                        .HasName("pk_nodes");

                    b.ToTable("nodes", "data");
                });

            modelBuilder.Entity("WebApi.Data.Model.OsmTag", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Name", "Value")
                        .HasName("pk_tags");

                    b.ToTable("tags", "data");
                });

            modelBuilder.Entity("WebApi.Data.Model.OsmWay", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_ways");

                    b.ToTable("ways", "data");
                });

            modelBuilder.Entity("OsmTagOsmWay", b =>
                {
                    b.HasOne("WebApi.Data.Model.OsmWay", null)
                        .WithMany()
                        .HasForeignKey("WaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_osm_tag_osm_way_ways_ways_id");

                    b.HasOne("WebApi.Data.Model.OsmTag", null)
                        .WithMany()
                        .HasForeignKey("TagsName", "TagsValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_osm_tag_osm_way_tags_tags_name_tags_value");
                });

            modelBuilder.Entity("WebApi.Data.Model.OsmEdge", b =>
                {
                    b.HasOne("WebApi.Data.Model.OsmNode", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_edges_nodes_from_id");

                    b.HasOne("WebApi.Data.Model.OsmNode", "To")
                        .WithMany()
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_edges_nodes_to_id");

                    b.HasOne("WebApi.Data.Model.OsmWay", "Way")
                        .WithMany()
                        .HasForeignKey("WayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_edges_ways_way_id");

                    b.Navigation("From");

                    b.Navigation("To");

                    b.Navigation("Way");
                });
#pragma warning restore 612, 618
        }
    }
}
